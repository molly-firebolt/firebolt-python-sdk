{"uid":"367643740f7be97e","name":"test_cursor_execute_error","fullName":"tests.unit.async_db.test_cursor#test_cursor_execute_error","historyId":"3283812241ecbb55fc377c834c539f68","time":{"start":1682282038443,"stop":1682282038496,"duration":53},"description":"Cursor handles all types of errors properly.","descriptionHtml":"<p>Cursor handles all types of errors properly.</p>\n","status":"broken","statusMessage":"FileNotFoundError: [Errno 2] No such file or directory in the fake filesystem: '/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/allure-results'","statusTrace":"self = <allure_pytest.listener.AllureListener object at 0x7fcb5fa3a550>\nfixturedef = <FixtureDef argname='cursor' scope='function' baseid='tests/unit/async_db'>\n\n    @pytest.hookimpl(hookwrapper=True)\n    def pytest_fixture_post_finalizer(self, fixturedef):\n        yield\n        if hasattr(fixturedef, 'cached_result') and self._cache.get(fixturedef):\n            container_uuid = self._cache.pop(fixturedef)\n>           self.allure_logger.stop_group(container_uuid, stop=now())\n\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/allure_pytest/listener.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/allure_commons/reporter.py:91: in stop_group\n    plugin_manager.hook.report_container(container=group)\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/allure_commons/logger.py:39: in report_container\n    self._report_item(container)\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/allure_commons/logger.py:30: in _report_item\n    with io.open(self._report_dir / filename, 'w', encoding='utf8') as json_file:\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py:5065: in open\n    newline, closefd, opener)\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py:5749: in __call__\n    return self.call(*args, **kwargs)\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py:5839: in call\n    real_path)\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py:5933: in _init_file_object\n    apply_umask=True)\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py:2902: in create_file_internally\n    self.raise_os_error(errno.ENOENT, parent_directory)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x7fcb5f026190>\nerr_no = 2\nfilename = '/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/allure-results'\nwinerror = None\n\n    def raise_os_error(self, err_no: int,\n                       filename: Optional[AnyString] = None,\n                       winerror: Optional[int] = None) -> NoReturn:\n        \"\"\"Raises OSError.\n        The error message is constructed from the given error code and shall\n        start with the error string issued in the real system.\n        Note: this is not true under Windows if winerror is given - in this\n        case a localized message specific to winerror will be shown in the\n        real file system.\n    \n        Args:\n            err_no: A numeric error code from the C variable errno.\n            filename: The name of the affected file, if any.\n            winerror: Windows only - the specific Windows error code.\n        \"\"\"\n        message = os.strerror(err_no) + ' in the fake filesystem'\n        if (winerror is not None and sys.platform == 'win32' and\n                self.is_windows_fs):\n            raise OSError(err_no, message, filename, winerror)\n>       raise OSError(err_no, message, filename)\nE       FileNotFoundError: [Errno 2] No such file or directory in the fake filesystem: '/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/allure-results'\n\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py:1122: FileNotFoundError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop","time":{"start":1682282038309,"stop":1682282038309,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"global_fake_fs","time":{"start":1682282038309,"stop":1682282038312,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Cursor handles all types of errors properly.","status":"broken","statusMessage":"FileNotFoundError: [Errno 2] No such file or directory in the fake filesystem: '/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/allure-results'","statusTrace":"self = <allure_pytest.listener.AllureListener object at 0x7fcb5fa3a550>\nfixturedef = <FixtureDef argname='cursor' scope='function' baseid='tests/unit/async_db'>\n\n    @pytest.hookimpl(hookwrapper=True)\n    def pytest_fixture_post_finalizer(self, fixturedef):\n        yield\n        if hasattr(fixturedef, 'cached_result') and self._cache.get(fixturedef):\n            container_uuid = self._cache.pop(fixturedef)\n>           self.allure_logger.stop_group(container_uuid, stop=now())\n\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/allure_pytest/listener.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/allure_commons/reporter.py:91: in stop_group\n    plugin_manager.hook.report_container(container=group)\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/allure_commons/logger.py:39: in report_container\n    self._report_item(container)\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/allure_commons/logger.py:30: in _report_item\n    with io.open(self._report_dir / filename, 'w', encoding='utf8') as json_file:\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py:5065: in open\n    newline, closefd, opener)\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py:5749: in __call__\n    return self.call(*args, **kwargs)\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py:5839: in call\n    real_path)\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py:5933: in _init_file_object\n    apply_umask=True)\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py:2902: in create_file_internally\n    self.raise_os_error(errno.ENOENT, parent_directory)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x7fcb5f026190>\nerr_no = 2\nfilename = '/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/allure-results'\nwinerror = None\n\n    def raise_os_error(self, err_no: int,\n                       filename: Optional[AnyString] = None,\n                       winerror: Optional[int] = None) -> NoReturn:\n        \"\"\"Raises OSError.\n        The error message is constructed from the given error code and shall\n        start with the error string issued in the real system.\n        Note: this is not true under Windows if winerror is given - in this\n        case a localized message specific to winerror will be shown in the\n        real file system.\n    \n        Args:\n            err_no: A numeric error code from the C variable errno.\n            filename: The name of the affected file, if any.\n            winerror: Windows only - the specific Windows error code.\n        \"\"\"\n        message = os.strerror(err_no) + ' in the fake filesystem'\n        if (winerror is not None and sys.platform == 'win32' and\n                self.is_windows_fs):\n            raise OSError(err_no, message, filename, winerror)\n>       raise OSError(err_no, message, filename)\nE       FileNotFoundError: [Errno 2] No such file or directory in the fake filesystem: '/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/allure-results'\n\n/opt/hostedtoolcache/Python/3.7.16/x64/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py:1122: FileNotFoundError","steps":[],"attachments":[{"uid":"a12dbd7a17f2bd77","name":"log","source":"a12dbd7a17f2bd77.txt","type":"text/plain","size":824}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"global_fake_fs::0","time":{"start":1682282038548,"stop":1682282038550,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"event_loop::0","time":{"start":1682282038550,"stop":1682282038550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"tests.unit.async_db"},{"name":"suite","value":"test_cursor"},{"name":"host","value":"fv-az592-914"},{"name":"thread","value":"2411-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.async_db.test_cursor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"5b65f2593d04a0a4","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/247/708//#testresult/5b65f2593d04a0a4","status":"broken","statusDetails":"FileNotFoundError: [Errno 2] No such file or directory in the fake filesystem: '/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/allure-results'","time":{"start":1682280334854,"stop":1682280334903,"duration":49}}]},"tags":["asyncio"]},"source":"367643740f7be97e.json","parameterValues":[]}