{
  "uid" : "b4ac20e1d02290d1",
  "name" : "test_server_side_async_execution_get_status",
  "fullName" : "tests.integration.dbapi.async.test_queries_async#test_server_side_async_execution_get_status",
  "historyId" : "cc8343dd59446a56314616f8fe77b222",
  "time" : {
    "start" : 1684783158126,
    "stop" : 1684783158126,
    "duration" : 0
  },
  "description" : "\n    Test get_status(). Test for three ending conditions: Simply test to see\n    that a StatusQuery object is returned. Queries are succeeding too quickly\n    to be able to check for specific status states.\n    ",
  "descriptionHtml" : "<pre><code>Test get_status(). Test for three ending conditions: Simply test to see\nthat a StatusQuery object is returned. Queries are succeeding too quickly\nto be able to check for specific status states.\n</code></pre>\n",
  "status" : "skipped",
  "statusMessage" : "Skipped: Can't get consistently slow queries so fails significant portion of time. get_status() always returns a QueryStatus object, so this assertion will always pass. Error condition of invalid status is caught in get_status().",
  "statusTrace" : "('/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/integration/dbapi/async/test_queries_async.py', 462, \"Skipped: Can't get consistently slow queries so fails significant portion of time. get_status() always returns a QueryStatus object, so this assertion will always pass. Error condition of invalid status is caught in get_status().\")",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "database_name",
    "time" : {
      "start" : 1684783156351,
      "stop" : 1684783156351,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "engine_url",
    "time" : {
      "start" : 1684783158138,
      "stop" : 1684783158138,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "connection",
    "time" : {
      "start" : 1684783158138,
      "stop" : 1684783158584,
      "duration" : 446
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "username",
    "time" : {
      "start" : 1684783156351,
      "stop" : 1684783156352,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "password",
    "time" : {
      "start" : 1684783156352,
      "stop" : 1684783156352,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "account_name",
    "time" : {
      "start" : 1684783156703,
      "stop" : 1684783156703,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_endpoint",
    "time" : {
      "start" : 1684783156703,
      "stop" : 1684783156703,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "password_auth",
    "time" : {
      "start" : 1684783156352,
      "stop" : 1684783156702,
      "duration" : 350
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "event_loop",
    "time" : {
      "start" : 1684783158138,
      "stop" : 1684783158138,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "connection::finalizer",
    "time" : {
      "start" : 1684783172546,
      "stop" : 1684783172547,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "event_loop::0",
    "time" : {
      "start" : 1684783172548,
      "stop" : 1684783172548,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "asyncio"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.skip(reason='Can't get consistently slow queries so fails significant portion of time. get_status() always returns a QueryStatus object, so this assertion will always pass. Error condition of invalid status is caught in get_status().')"
  }, {
    "name" : "parentSuite",
    "value" : "tests.integration.dbapi.async"
  }, {
    "name" : "suite",
    "value" : "test_queries_async"
  }, {
    "name" : "host",
    "value" : "fv-az257-341"
  }, {
    "name" : "thread",
    "value" : "2532-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.integration.dbapi.async.test_queries_async"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ "asyncio", "@pytest.mark.skip(reason='Can't get consistently slow queries so fails significant portion of time. get_status() always returns a QueryStatus object, so this assertion will always pass. Error condition of invalid status is caught in get_status().')" ]
  },
  "source" : "b4ac20e1d02290d1.json",
  "parameterValues" : [ ]
}