{"uid":"ef661827c55820f6","name":"test_server_side_async_execution_get_status","fullName":"tests.integration.dbapi.async.test_queries_async#test_server_side_async_execution_get_status","historyId":"cc8343dd59446a56314616f8fe77b222","time":{"start":1682600534717,"stop":1682600534717,"duration":0},"description":"\n    Test get_status(). Test for three ending conditions: Simply test to see\n    that a StatusQuery object is returned. Queries are succeeding too quickly\n    to be able to check for specific status states.\n    ","descriptionHtml":"<pre><code>Test get_status(). Test for three ending conditions: Simply test to see\nthat a StatusQuery object is returned. Queries are succeeding too quickly\nto be able to check for specific status states.\n</code></pre>\n","status":"skipped","statusMessage":"Skipped: Can't get consistently slow queries so fails significant portion of time. get_status() always returns a QueryStatus object, so this assertion will always pass. Error condition of invalid status is caught in get_status().","statusTrace":"('/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/integration/dbapi/async/test_queries_async.py', 469, \"Skipped: Can't get consistently slow queries so fails significant portion of time. get_status() always returns a QueryStatus object, so this assertion will always pass. Error condition of invalid status is caught in get_status().\")","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"engine_url","time":{"start":1682600519833,"stop":1682600519834,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"database_name","time":{"start":1682600519834,"stop":1682600519834,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"username","time":{"start":1682600519834,"stop":1682600519834,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"password_auth","time":{"start":1682600519834,"stop":1682600520209,"duration":375},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"password","time":{"start":1682600519834,"stop":1682600519834,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"account_name","time":{"start":1682600520210,"stop":1682600520210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_endpoint","time":{"start":1682600520226,"stop":1682600520227,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"event_loop","time":{"start":1682600546310,"stop":1682600546311,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"event_loop::0","time":{"start":1682600547028,"stop":1682600547028,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.skip(reason='Can't get consistently slow queries so fails significant portion of time. get_status() always returns a QueryStatus object, so this assertion will always pass. Error condition of invalid status is caught in get_status().')"},{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"tests.integration.dbapi.async"},{"name":"suite","value":"test_queries_async"},{"name":"host","value":"fv-az577-286"},{"name":"thread","value":"2581-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.dbapi.async.test_queries_async"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":2,"passed":0,"unknown":0,"total":2},"items":[{"uid":"21e431323e5b6b7a","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/main/198//#testresult/21e431323e5b6b7a","status":"skipped","statusDetails":"Skipped: Can't get consistently slow queries so fails significant portion of time. get_status() always returns a QueryStatus object, so this assertion will always pass. Error condition of invalid status is caught in get_status().","time":{"start":1682592292581,"stop":1682592292581,"duration":0}}]},"tags":["asyncio","@pytest.mark.skip(reason='Can't get consistently slow queries so fails significant portion of time. get_status() always returns a QueryStatus object, so this assertion will always pass. Error condition of invalid status is caught in get_status().')"]},"source":"ef661827c55820f6.json","parameterValues":[]}